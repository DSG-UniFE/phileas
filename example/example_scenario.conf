# simulation time start and duration
start_time DateTime.civil(2018,5,16,0,0,0)
warmup_duration 10.minutes
duration 1.day

# location database
locations(
  1 => { latitude: 44.8435, longitude: 11.6087 } # ferrara coordinates
)

# data sources
data_sources(
  1 => {
    voi_dist: { distribution: :exponential, args: { rate: 0.1 } }, # CHECK PARAMETERS
    message_size_dist: { distribution: :exponential, args: { rate: 0.1 } }, # TO FIX
    time_between_message_generation_dist: { distribution: :exponential, args: { rate: 0.1 } }, # CHECK PARAMETERS
    output_content_type: :video,
    location_id: 1,
    time_decay:  { type: :linear, halflife: 1000.0 }, # TO WRITE
    space_decay: { type: :linear, halflife: 1000.0 }, # TO WRITE
  },
)

# devices
devices(
  1 => {
    type: :edge,
    resources: 100.0,
    location_id: 1,
  },
  99 => {
    resources: Float::INFINITY,
    type: :cloud,
  },
)

# user groups
user_groups(
  1 => {
    user_dist: { distribution: :exponential, args: { rate: 0.2 } }, # TODO: fix distribution (constant + beta?)
    location_id: 1,
    interests: [
      { content_type: :annotated_video, share: 0.8 }, # 80% of users are interested in video content
      { content_type: :text,  share: 0.7 }, # 70% of users are interested in video content
    ]
  },
)

# service types
service_types(
  1 => {
    input_content_type: :video,
    input_message_type: :raw_data,
    output_content_type: :annotated_video,
    output_message_type: :crio,
    resource_requirements: 80.0,
    time_decay:  { type: :linear, halflife: 1000.0 }, # TO WRITE
    space_decay: { type: :linear, halflife: 1000.0 }, # TO WRITE
    processing_policy: {
      type: :aggregation,
      aggregation_window_size_dist: { distribution: :geometric, args: { probability_of_success: 0.9 } },
      aggregated_message_size_dist: { distribution: :geometric, args: { probability_of_success: 0.1 } },
      voi_multiplier: 5.0,
    },
  },
)

# service activations
service_activations(
  1 => { type_id: 1, at: { time: start_time, device_id: 1 } },
)

# vim: ft=ruby
