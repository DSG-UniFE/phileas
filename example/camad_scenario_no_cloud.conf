# simulation time start and duration
start_time Time.now
warmup_duration 10.minutes
duration 1.days

# location database
locations(
  #national mall edge device 1
  1 => { latitude: 38.889809, longitude: -77.014666 },
  #national mall pollution and weather sensor data_source
  2 => { latitude: 38.889070, longitude: -77.018466},
  #nation mall pollution's user_group
  3 => { latitude: 38.890300, longitude: -77.022982},
  #national mall music's data_source (jazz in the garden)
  4 => { latitude: 38.890817, longitude: -77.023532},
  #national mall edge device 2
  5 => { latitude: 38.888888, longitude: -77.022682 },
  #national mall music' user_group
  6 => { latitude: 38.890783, longitude: -77.021539 },
  #pennsylvania avenue cross d st pollution data_source and edge device
  7 => { latitude: 38.886017, longitude: -76.999509 },
  #pennsylvania avenue cross d st pollution user group
  8 => { latitude: 38.885533, longitude: -76.997217 },
  #union station
  9 => { latitude: 38.896939, longitude: -77.006454},
  #near union station
  10 => { latitude: 38.895017, longitude: -77.006534},
    #national mall music' user_group
  11 => { latitude: 38.88942, longitude: -77.01617 }


)

# data sources
data_sources(
  1 => {
    voi_dist: { distribution: :exponential, args: { rate: 0.2 } },
    message_size_dist: { distribution: :exponential, args: { rate: 0.1 } }, # TO FIX
    time_between_message_generation_dist: { distribution: :exponential, args: { rate: 0.1 } }, # CHECK PARAMETERS
    output_content_type: :pollution,
    location_id: 2,
    time_decay:  { type: :linear, halflife: 1000.0 }, # TO WRITE
    space_decay: { type: :linear, halflife: 1000.0 }, # TO WRITE
  },
  2 => {
    voi_dist: { distribution: :exponential, args: { rate: 0.3 } },
    message_size_dist: { distribution: :exponential, args: { rate: 0.1 } },
    time_between_message_generation_dist: { distribution: :exponential, args: { rate: 0.1 } },
    output_content_type: :music,
    location_id: 4,
    time_decay:  { type: :linear, halflife: 1000.0 },
    space_decay: { type: :linear, halflife: 1000.0 },
  },
  3 => {
    voi_dist: { distribution: :exponential, args: { rate: 0.3 } },
    message_size_dist: { distribution: :exponential, args: { rate: 0.1 } },
    time_between_message_generation_dist: { distribution: :exponential, args: { rate: 0.1 } },
    output_content_type: :traffic,
    location_id: 7,
    time_decay:  { type: :linear, halflife: 1000.0 },
    space_decay: { type: :linear, halflife: 1000.0 },
  },
  4 => {
    voi_dist: { distribution: :exponential, args: { rate: 0.4 } },
    message_size_dist: { distribution: :exponential, args: { rate: 0.1 } },
    time_between_message_generation_dist: { distribution: :exponential, args: { rate: 0.1 } },
    output_content_type: :pollution,
    location_id: 7,
    time_decay:  { type: :linear, halflife: 1000.0 },
    space_decay: { type: :linear, halflife: 1000.0 },
  },
  5 => {
  voi_dist: { distribution: :exponential, args: { rate: 0.30 } },
  message_size_dist: { distribution: :exponential, args: { rate: 0.1 } },
  time_between_message_generation_dist: { distribution: :exponential, args: { rate: 0.2 } },
  output_content_type: :weather,
  location_id: 2,
  time_decay:  { type: :linear, halflife: 1000.0 },
  space_decay: { type: :linear, halflife: 1000.0 },
  },
  6 => {
  voi_dist: { distribution: :exponential, args: { rate: 0.35 } },
  message_size_dist: { distribution: :exponential, args: { rate: 0.20 } },
  time_between_message_generation_dist: { distribution: :exponential, args: { rate: 0.2 } },
  output_content_type: :weather,
  location_id: 9,
  time_decay:  { type: :linear, halflife: 1000.0 },
  space_decay: { type: :linear, halflife: 1000.0 },
  },
  7 => {
  voi_dist: { distribution: :exponential, args: { rate: 0.2 } },
  message_size_dist: { distribution: :exponential, args: { rate: 0.30 } },
  time_between_message_generation_dist: { distribution: :exponential, args: { rate: 0.2 } },
  output_content_type: :pollution,
  location_id: 9,
  time_decay:  { type: :linear, halflife: 1000.0 },
  space_decay: { type: :linear, halflife: 1000.0 },
  },
)

# devices
devices(
  #pollution/music
  1 => {
    type: :edge,
    resources: 100.0,
    location_id: 1,
  },
  #music/pollution national mall
  2 => {
    type: :edge,
    resources: 100.0,
    location_id: 5,
  },
  #pollution/traffic pennsylvania avenue cross d st
  3 => {
  type: :edge,
  resources: 100.0,
  location_id: 7,
  },
  4 => {
  type: :edge,
  resources: 100.0,
  location_id: 9,
  },
  99 => {
    resources: Float::INFINITY,
    type: :cloud,
  },
)

# user groups
user_groups(
  #users interested in pollution data of the national mall park (outside activities) 
  1 => {
    user_dist: { distribution: :exponential, args: { rate: 0.3 } }, # TODO: fix distribution (constant + beta?)
    location_id: 3,
    interests: [
      { content_type: :pollution_information, share: 0.9 }, 
      { content_type: :music_information,  share: 0.1 },
      { content_type: :weather, share: 0.7 }, 
    ]
  },
  #users interested in receiving information about the song played in the park
  2 => {
  user_dist: { distribution: :exponential, args: { rate: 0.2 } }, 
  location_id: 6,
  interests: [
    { content_type: :pollution_information, share: 0.5 }, 
    { content_type: :music_information,  share: 0.8 }, 
    { content_type: :weather, share: 0.4 }, 
  ]
  },
  #users interested in pollution data of the national mall park (outside activities) 
  3 => {
    user_dist: { distribution: :exponential, args: { rate: 0.375 } },
    location_id: 8,
    interests: [
      { content_type: :pollution_information, share: 0.60 }, 
      { content_type: :traffic_information,  share: 0.90 }, 
    ]
  },
  4 => {
    user_dist: { distribution: :exponential, args: { rate: 0.375 } },
    location_id: 10,
    interests: [
      { content_type: :pollution_information, share: 0.70 }, 
      { content_type: :weather_information,  share: 0.90 }, 
    ]
  },
)

# service types
service_types(
  #pollution service_type
  1 => {
    input_content_type: :pollution,
    input_message_type: :raw_data,
    output_content_type: :pollution_information,
    output_message_type: :crio,
    resource_requirements: 50.0,
    time_decay:  { type: :linear, halflife: 1000.0 }, # TO WRITE
    space_decay: { type: :linear, halflife: 1000.0 }, # TO WRITE
    processing_policy: {
      type: :aggregation,
      # aggregation_window_size_dist: { distribution: :geometric, args: { probability_of_success: 0.9 } },
      aggregation_window_size_dist: { distribution: :discrete_uniform, args: { min_value: 1, max_value: 10 } },
      # aggregated_message_size_dist: { distribution: :geometric, args: { probability_of_success: 0.1 } },
      aggregated_message_size_dist: { distribution: :discrete_uniform, args: { min_value: 1024, max_value: 2048 } },
      voi_multiplier: 2.0,
    },
  },
  #music recognition service_type
  2 => {
  input_content_type: :music,
  input_message_type: :raw_data,
  output_content_type: :music_information,
  output_message_type: :crio,
  resource_requirements: 85.0,
  time_decay:  { type: :linear, halflife: 1000.0 }, # TO WRITE
  space_decay: { type: :linear, halflife: 1000.0 }, # TO WRITE
  processing_policy: {
    type: :aggregation,
    # aggregation_window_size_dist: { distribution: :geometric, args: { probability_of_success: 0.9 } },
    aggregation_window_size_dist: { distribution: :discrete_uniform, args: { min_value: 1, max_value: 10 } },
    # aggregated_message_size_dist: { distribution: :geometric, args: { probability_of_success: 0.1 } },
    aggregated_message_size_dist: { distribution: :discrete_uniform, args: { min_value: 1024, max_value: 2048 } },
    voi_multiplier: 4.0,
   },
  },
  #traffic service_type
  3 => {
  input_content_type: :traffic,
  input_message_type: :raw_data,
  output_content_type: :traffic_information,
  output_message_type: :crio,
  resource_requirements: 40.0,
  time_decay:  { type: :linear, halflife: 1000.0 }, # TO WRITE
  space_decay: { type: :linear, halflife: 1000.0 }, # TO WRITE
  processing_policy: {
    type: :aggregation,
    # aggregation_window_size_dist: { distribution: :geometric, args: { probability_of_success: 0.9 } },
    aggregation_window_size_dist: { distribution: :discrete_uniform, args: { min_value: 1, max_value: 10 } },
    # aggregated_message_size_dist: { distribution: :geometric, args: { probability_of_success: 0.1 } },
    aggregated_message_size_dist: { distribution: :discrete_uniform, args: { min_value: 1024, max_value: 2048 } },
    voi_multiplier: 5.0,
    },
  },
  4 => {
  input_content_type: :weather,
  input_message_type: :raw_data,
  output_content_type: :weather_information,
  output_message_type: :crio,
  resource_requirements: 45.0,
  time_decay:  {   type: :linear, halflife: 1000.0 }, # TO WRITE
  space_decay: { type: :linear, halflife: 1000.0 }, # TO WRITE
  processing_policy: {
    type: :aggregation,
    # aggregation_window_size_dist: { distribution: :geometric, args: { probability_of_success: 0.9 } },
    aggregation_window_size_dist: { distribution: :discrete_uniform, args: { min_value: 1, max_value: 10 } },
    # aggregated_message_size_dist: { distribution: :geometric, args: { probability_of_success: 0.1 } },
    aggregated_message_size_dist: { distribution: :discrete_uniform, args: { min_value: 1024, max_value: 2048 } },
    # lower voi
    voi_multiplier: 3.0,
    },
  },
)

# service activations
service_activations(
  1 => { type_id: 1, at: { time: start_time, device_id: 1 } },
  #start time + delay
  2 => { type_id: 2, at: { time: start_time + 3600 * 6, device_id: 2 } },
  #activate traffic and pollution service on the same device
  3 => { type_id: 3, at: { time: start_time + 3600 * 12, device_id: 3 } },

  4 => { type_id: 1, at: { time: start_time, device_id: 3 } },

  5 => { type_id: 1, at: { time: start_time + 36000 * 6, device_id: 4 } },

  6 => { type_id: 4, at: { time: start_time, device_id: 4 } },
)

# vim: ft=ruby
